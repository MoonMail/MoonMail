service: MoonMail-v2-emails

plugins:
  - serverless-plugin-optimize

provider:
  name: aws
  runtime: nodejs6.10
  profile: ${self:custom.config.PROFILE}
  region: ${self:custom.config.REGION}
  timeout: 300
  environment:
    REGION: ${self:custom.config.REGION}
    EVENTS_ROUTER_STREAM_NAME:
      Fn::ImportValue: EventsRouterStreamName-${self:custom.currentStage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "kinesis:putRecord"
      Resource: "*"

package:
  individually: true

custom:
  defaultStage: dev
  currentStage: ${opt:stage, self:custom.defaultStage}
  resourcesPrefix: ${self:service}-${self:custom.currentStage}
  config: ${file(./config.${self:custom.currentStage}.json)}
  emailNotificationsTopicName: ${self:custom.resourcesPrefix}-EmailNotificationsTopic
  emailNotificationsTopicArn:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - ${self:custom.emailNotificationsTopicName}

functions:
  processSesNotification:
    handler: handler.processSesNotification
    events:
      - sns:
          arn: ${self:custom.emailNotificationsTopicArn}
          topicName: ${self:custom.emailNotificationsTopicName}

resources:
  Resources:
    EmailNotificationsTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: ${self:custom.emailNotificationsTopicName}
    EmailNotificationsTopicPolicy:
      Type: "AWS::SNS::TopicPolicy"
      Properties:
        PolicyDocument:
          Statement:
            -
              Effect: Allow
              Principal:
                AWS: "*"
              Action: "SNS:Publish"
              Resource:
                Ref: EmailNotificationsTopic
        Topics:
          -
            Ref: EmailNotificationsTopic
